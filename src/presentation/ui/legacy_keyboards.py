from typing import Dict

from telegram import InlineKeyboardButton, InlineKeyboardMarkup

from src.constants import DEPARTMENT_DISPLAY


def get_gender_selection_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞."""
    buttons = [
        [InlineKeyboardButton("\U0001f468 –ú—É–∂—Å–∫–æ–π", callback_data="gender_M")],
        [InlineKeyboardButton("\U0001f469 –ñ–µ–Ω—Å–∫–∏–π", callback_data="gender_F")],
        [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="field_edit_cancel")],
    ]
    return InlineKeyboardMarkup(buttons)


def get_role_selection_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏."""
    buttons = [
        [InlineKeyboardButton("\U0001f464 –ö–∞–Ω–¥–∏–¥–∞—Ç", callback_data="role_CANDIDATE")],
        [InlineKeyboardButton("\U0001f465 –ö–æ–º–∞–Ω–¥–∞", callback_data="role_TEAM")],
        [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="field_edit_cancel")],
    ]
    return InlineKeyboardMarkup(buttons)


def get_gender_selection_keyboard_required() -> InlineKeyboardMarkup:
    """Keyboard for gender selection without manual input."""
    buttons = [
        [InlineKeyboardButton("\U0001f468 –ú—É–∂—Å–∫–æ–π", callback_data="gender_M")],
        [InlineKeyboardButton("\U0001f469 –ñ–µ–Ω—Å–∫–∏–π", callback_data="gender_F")],
        [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="field_edit_cancel")],
    ]
    return InlineKeyboardMarkup(buttons)


def get_role_selection_keyboard_required() -> InlineKeyboardMarkup:
    """Keyboard for role selection without manual input."""
    buttons = [
        [InlineKeyboardButton("\U0001f464 –ö–∞–Ω–¥–∏–¥–∞—Ç", callback_data="role_CANDIDATE")],
        [InlineKeyboardButton("\U0001f465 –ö–æ–º–∞–Ω–¥–∞", callback_data="role_TEAM")],
        [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="field_edit_cancel")],
    ]
    return InlineKeyboardMarkup(buttons)


def get_size_selection_keyboard_required() -> InlineKeyboardMarkup:
    """Keyboard for size selection without manual input."""
    buttons = [
        [
            InlineKeyboardButton("XS", callback_data="size_XS"),
            InlineKeyboardButton("S", callback_data="size_S"),
            InlineKeyboardButton("M", callback_data="size_M"),
        ],
        [
            InlineKeyboardButton("L", callback_data="size_L"),
            InlineKeyboardButton("XL", callback_data="size_XL"),
            InlineKeyboardButton("XXL", callback_data="size_XXL"),
        ],
        [InlineKeyboardButton("3XL", callback_data="size_3XL")],
        [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="field_edit_cancel")],
    ]
    return InlineKeyboardMarkup(buttons)


def get_department_selection_keyboard_required() -> InlineKeyboardMarkup:
    """Keyboard for department selection without manual input."""
    buttons = []
    dept_items = list(DEPARTMENT_DISPLAY.items())
    for i in range(0, len(dept_items), 2):
        row = []
        for j in range(i, min(i + 2, len(dept_items))):
            key, display_name = dept_items[j]
            row.append(InlineKeyboardButton(display_name, callback_data=f"dept_{key}"))
        buttons.append(row)

    buttons.append([InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="field_edit_cancel")])
    return InlineKeyboardMarkup(buttons)


def get_size_selection_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ –±–µ–∑ —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞."""
    buttons = [
        [
            InlineKeyboardButton("XS", callback_data="size_XS"),
            InlineKeyboardButton("S", callback_data="size_S"),
            InlineKeyboardButton("M", callback_data="size_M"),
        ],
        [
            InlineKeyboardButton("L", callback_data="size_L"),
            InlineKeyboardButton("XL", callback_data="size_XL"),
            InlineKeyboardButton("XXL", callback_data="size_XXL"),
        ],
        [InlineKeyboardButton("3XL", callback_data="size_3XL")],
        [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="field_edit_cancel")],
    ]
    return InlineKeyboardMarkup(buttons)


def get_gender_selection_keyboard_simple() -> InlineKeyboardMarkup:
    """Keyboard for gender selection without manual input."""
    buttons = [
        [InlineKeyboardButton("\U0001f468 –ú—É–∂—Å–∫–æ–π", callback_data="gender_M")],
        [InlineKeyboardButton("\U0001f469 –ñ–µ–Ω—Å–∫–∏–π", callback_data="gender_F")],
        [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="field_edit_cancel")],
    ]
    return InlineKeyboardMarkup(buttons)


def get_department_selection_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞."""
    buttons = []
    dept_items = list(DEPARTMENT_DISPLAY.items())
    for i in range(0, len(dept_items), 2):
        row = []
        for j in range(i, min(i + 2, len(dept_items))):
            key, display_name = dept_items[j]
            row.append(InlineKeyboardButton(display_name, callback_data=f"dept_{key}"))
        buttons.append(row)

    # –ö–Ω–æ–ø–∫–∞ —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ —É–¥–∞–ª–µ–Ω–∞
    buttons.append([InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="field_edit_cancel")])
    return InlineKeyboardMarkup(buttons)


def get_edit_keyboard(participant_data: Dict) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–µ–π."""
    buttons = [
        [InlineKeyboardButton("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data="confirm_save")],
        [
            InlineKeyboardButton("üë§ –ò–º—è (—Ä—É—Å)", callback_data="edit_FullNameRU"),
            InlineKeyboardButton("üåç –ò–º—è (–∞–Ω–≥–ª)", callback_data="edit_FullNameEN"),
        ],
        [
            InlineKeyboardButton("‚ö• –ü–æ–ª", callback_data="edit_Gender"),
            InlineKeyboardButton("üëï –†–∞–∑–º–µ—Ä", callback_data="edit_Size"),
        ],
        [
            InlineKeyboardButton("‚õ™ –¶–µ—Ä–∫–æ–≤—å", callback_data="edit_Church"),
            InlineKeyboardButton("üèôÔ∏è –ì–æ—Ä–æ–¥", callback_data="edit_CountryAndCity"),
        ],
    ]

    role = participant_data.get("Role")
    if role == "CANDIDATE":
        buttons.append([InlineKeyboardButton("üë• –†–æ–ª—å", callback_data="edit_Role")])
    else:
        buttons.append(
            [
                InlineKeyboardButton("üë• –†–æ–ª—å", callback_data="edit_Role"),
                InlineKeyboardButton("üè¢ –î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç", callback_data="edit_Department"),
            ]
        )

    buttons.append(
        [
            InlineKeyboardButton("üë®‚Äçüíº –ö—Ç–æ –ø–æ–¥–∞–ª", callback_data="edit_SubmittedBy"),
            InlineKeyboardButton(
                "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="edit_ContactInformation"
            ),
        ]
    )

    buttons.append([InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="main_cancel")])
    return InlineKeyboardMarkup(buttons)


class KeyboardFactory:
    @staticmethod
    def create_main_menu(user_role: str) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏."""
        if user_role == "coordinator":
            keyboard = [
                [
                    InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å", callback_data="main_add"),
                    InlineKeyboardButton("üîç –ü–æ–∏—Å–∫", callback_data="main_search"),
                ],
                [
                    InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫", callback_data="main_list"),
                    InlineKeyboardButton("üì§ –≠–∫—Å–ø–æ—Ä—Ç", callback_data="main_export"),
                ],
                [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="main_help")],
            ]
        else:
            keyboard = [
                [
                    InlineKeyboardButton("üîç –ü–æ–∏—Å–∫", callback_data="main_search"),
                    InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫", callback_data="main_list"),
                ],
                [
                    InlineKeyboardButton("üì§ –≠–∫—Å–ø–æ—Ä—Ç", callback_data="main_export"),
                    InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="main_help"),
                ],
            ]

        return InlineKeyboardMarkup(keyboard)
